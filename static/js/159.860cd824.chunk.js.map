{"version":3,"file":"static/js/159.860cd824.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"labelForm\":\"ContactForm_labelForm__DEnf8\"};","import { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport css from './ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useContacts } from 'hooks';\nimport Button from '@mui/material/Button';\n\nconst contactSchema = object({\n  name: string().required(),\n  number: string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Phone number is required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n  const onAddContact = (values, actions) => {\n    const isExist = contacts.some(\n      el => el.name.toLowerCase() === values.name.trim().toLowerCase()\n    );\n    if (isExist) {\n      alert('Contact is already exist');\n      return;\n    }\n    dispatch(addContact({ ...values }));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={contactSchema}\n      onSubmit={onAddContact}\n    >\n      <Form>\n        <label className={css.labelForm}>\n          <span>Name</span>\n          <Field name=\"name\" type=\"text\" />\n        </label>\n        <ErrorMessage component=\"div\" name=\"name\" />\n        <label className={css.labelForm}>\n          <span>Phone</span>\n          <Field name=\"number\" type=\"text\" />\n        </label>\n        <ErrorMessage component=\"div\" name=\"number\" />\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"labelFilter\":\"Filter_labelFilter__7SBy1\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\nimport { useFilter } from 'hooks';\n\nexport const Filter = () => {\n  const filter = useFilter();\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <label className={css.labelFilter}>\n        {' '}\n        Filter by name\n        <input\n          value={filter}\n          onChange={event => dispatch(setFilter(event.target.value))}\n        ></input>{' '}\n      </label>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"buttonDelete\":\"ContactList_buttonDelete__3LEoC\"};","import css from './ContactList.module.css';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { useFilteredContacts } from 'hooks';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const list = useFilteredContacts();\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n    dispatch(setFilter(''));\n  };\n\n  return (\n    <ul className={css.contactList}>\n      {list.map(({ id, name, number }) => {\n        return (\n          <li className={css.contactItem} key={id}>\n            <span>{name}: </span>\n            <span>{number} </span>\n            <Button\n              className={css.buttonDelete}\n              variant=\"outlined\"\n              startIcon={<DeleteIcon />}\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </Button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { ProgressBar } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => (\n  <div className={css.loader}>\n    <ProgressBar\n      height=\"80\"\n      width=\"100\"\n      ariaLabel=\"progress-bar-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"progress-bar-wrapper\"\n      borderColor=\"#3E89F4\"\n      barColor=\"#F4F43E\"\n    />\n  </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Contacts_main__kG0SX\",\"message\":\"Contacts_message__yq0hK\"};","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Loader } from '../../components/Loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useError, useFilter, useFilteredContacts, useIsLoading } from 'hooks';\nimport css from './Contacts.module.css';\nimport { Typography } from '@mui/material';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const filteredContactsList = useFilteredContacts();\n  const filter = useFilter();\n  const isLoading = useIsLoading();\n  const error = useError();\n\n  useEffect(() => {\n    if (error) toast.error(error);\n  }, [error]);\n\n  const emptyMessage = filter\n    ? `No contacts macth \"${filter}\"`\n    : 'Phonebook is empty. Add contacts first';\n\n  return (\n    <main className={css.main}>\n      <Typography variant=\"h4\" component=\"h4\">\n        Контакти колаборантів\n      </Typography>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      {filteredContactsList.length ? (\n        <ContactList />\n      ) : (\n        <div className={css.message}>{emptyMessage}</div>\n      )}\n      <ToastContainer />\n    </main>\n  );\n}\n"],"names":["contactSchema","object","name","string","required","number","matches","ContactForm","dispatch","useDispatch","contacts","useContacts","initialValues","validationSchema","onSubmit","values","actions","some","el","toLowerCase","trim","alert","addContact","resetForm","className","css","type","component","Button","variant","Filter","filter","useFilter","value","onChange","event","setFilter","target","ContactList","list","useFilteredContacts","map","id","startIcon","Delete","onClick","deleteContact","onDeleteContact","Loader","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","Contacts","useEffect","fetchContacts","filteredContactsList","isLoading","useIsLoading","error","useError","toast","emptyMessage","Typography","length"],"sourceRoot":""}